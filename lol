--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==2) then function v23()local v39=0 + 0;local v40;local v41;while true do if ((306 -(79 + 227))==v39) then v40,v41=v2(v16,v19,v19 + 2 + 0);v19=v19 + 2 + 0;v39=(1 + 0) -0;end if (v39==(1420 -((548 -349) + 1220))) then return (v41 * 256) + v40;end end end v24=nil;function v24()local v42=(0 -0) + 0;local v43;local v44;local v45;local v46;while true do if (v42==(1588 -(132 + 836 + 620))) then v43,v44,v45,v46=v2(v16,v19,v19 + (825 -(28 + 795)) + 1);v19=v19 + (11 -7);v42=1;end if ((1760 -(147 + 1612))==v42) then return (v46 * (9180267 + 7596949)) + (v45 * (30628 + (97869 -62961))) + (v44 * (2178 -(1630 + 292))) + v43;end end end v25=nil;v18=3;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v31)if (v2(v31,2)==79) then v20=v1(v4(v31,1,1));return "";else local v66=v3(v1(v31,16));if v20 then local v74=0;local v75;while true do if (1==v74) then return v75;end if (v74==0) then v75=v6(v66,v20);v20=nil;v74=1;end end else return v66;end end end);v21=nil;v18=1;end if (v18==3) then function v25()local v47=v24();local v48=v24();return (( -(2 + 0) * v21(v48,18 + 14)) + (1 -0)) * ((2 -0)^(v21(v48,(2608 -(238 + 357)) -(1092 + 900),281 -(150 + 100)) -((1562 + 468) -(204 + 803)))) * ((((v21(v48,1,255 -(20 + 215)) * (((9 -7) + 0)^(55 -23))) + v47)/((6 -4)^(25 + 27))) + 1 + 0);end v26=nil;function v26(v32)local v49;if  not v32 then v32=v24();if (v32==(0 -0)) then return "";end end v49=v4(v16,v19,(v19 + v32) -(1 -0));v19=v19 + v32;local v50={};for v64=777 -(80 + 696), #v49 do v50[v64]=v3(v2(v4(v49,v64,v64)));end return v7(v50);end v27=v24;v18=4;end if (v18==5) then v30=nil;function v30(v33,v34,v35)local v51=v33[1];local v52=v33[2];local v53=v33[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1;local function v71()local v76=v51;local v77=Const;local v78=v52;local v79=v53;local v80=v28;local v81={};local v82={};local v83={};for v88=0 -0,v70 do if (((1674 + 1646)==3320) and (v88>=v79)) then v81[v88-v79]=v69[v88 + (3 -2)];else v83[v88]=v69[v88 + 1 + 0];end end local v84=(v70-v79) + (2 -1);local v85;local v86;while true do local v89=0 + 0;local v90;while true do if ((v89==(0 -0)) or ((2994 -(43 + 561))>3999)) then v90=79 -(21 + 58);while true do if ((v90==(0 + 0)) or ((956 + 1957)>=3852)) then v85=v76[v67];v86=v85[1 -0];v90=1;end if (((1386 + 1482)<(5683 -(900 + 673))) and ((1 + 0)==v90)) then if ((v86<=(10 + 12)) or ((335 + 227)==1232)) then if ((3049<4686) and (v86<=10)) then if ((((2100 -(1706 + 12)) -267)==(1221 -((1782 -1182) + 506))) and (v86<=(3 + 1))) then if ((1474==(2119 -645)) and (v86<=((2400 -(173 + 273)) -(987 + 966)))) then if ((v86==(0 + 0)) or (4912<(494 + 745))) then local v110=810 -(259 + 551);local v111;local v112;local v113;while true do if ((v110==(0 -0)) or ((3777 + 38 + 115)<(15 + 13))) then v111=0 -0;v112=nil;v110=604 -(447 + 156);end if ((4944>(4930 -(2246 + 249))) and (1==v110)) then v113=nil;while true do if ((v111==(0 -0)) or ((4329 -(126 + 1321))==(913 + 2833))) then local v226=0;while true do if (((3192 -2200)<=(3750 -(415 + 231))) and (v226==(0 + 0))) then v112=1600 -(118 + 1482);v113=nil;v226=1116 -(680 + 435);end if ((v226==(1948 -(773 + 1174))) or ((1418 -(206 + 292))>=(3645 -1458))) then v111=1;break;end end end if (((51 + 326)<=(7423 -3438)) and (v111==(3 -(770 -(456 + 312))))) then while true do if (((4364 -(375 + 176))>2330) and (v112==(1835 -(70 + 1765)))) then v113=v85[1595 -(1099 + 494)];v83[v113]=v83[v113](v83[v113 + (1 -0)]);break;end end break;end end break;end end else local v114=680 -(366 + 313 + 1);local v115;local v116;local v117;local v118;local v119;while true do if ((v114==(0 -0)) or ((3006 -(1432 + 457))>=(3549 -1442))) then v115=0 + 0;v116=nil;v114=1;end if (((4262 + 145)==(2221 + 2186)) and (v114==(969 -(803 + 165)))) then v117=nil;v118=nil;v114=2;end if (((1076 + 2821)>=949) and (v114==(1 + 1))) then v119=nil;while true do if ((v115==(1217 -(46 + 1169))) or (((4806 + 14207) -14224)<(7679 -3583))) then while true do if (((414 + 1091)<=((1127 + 5504) -(793 + 1012))) and (v116==(1574 -(47 + 1527)))) then local v266=0 -0;local v267;while true do if (((3400 -(257 + 848))>=(778 + 436)) and (0==v266)) then v267=0;while true do if ((v267==(544 -((951 -(160 + 439)) + 191))) or ((3154 + 1729)<=(5735 -1107))) then v116=1 + 0;break;end if (((2404 -(4142 -2924))<=(1098 + 2735)) and (v267==(1419 -(1001 + 418)))) then local v312=0 -0;while true do if (((4463 + 112)<=(5888 -((406 -182) + (2646 -(850 + 922))))) and (v312==(0 -0))) then v117=v85[1392 -(1233 + 157)];v118=v83[v117 + (1264 -(1131 + 131))];v312=2 -1;end if (((4469 -(303 + 1572))==2594) and (v312==(1 + 0))) then v267=4 -3;break;end end end end break;end end end if ((1==v116) or ((3505 -1872)<(57 -37))) then local v268=0 + 0;local v269;while true do if ((v268==(908 -((542 -(141 + 360)) + 867))) or (4769<=938)) then v269=0 -0;while true do if (((3611 + 625)>=(620 + (3206 -(563 + 909)))) and (v269==1)) then v116=1773 -(73 + 1698);break;end if (((779 -496)<=(2304 + 20)) and (((0 -0) -0)==v269)) then v119=v83[v117] + v118;v83[v117]=v119;v269=1;end end break;end end end if ((v116==2) or (3556>=(1346 + 2669))) then if (((1705 -(623 + 551))==(1120 -(91 + 498))) and (v118>0)) then if ((v119<=v83[v117 + (616 -(563 + 52))]) or ((3365 -(289 + 145))==(9954 -7327))) then local v303=0;while true do if (((2308 + 731)>1162) and (v303==((501 -(70 + 431)) -(0 -0)))) then v67=v85[2 + 1];v83[v117 + (1717 -(1122 + 594)) + 2]=v119;break;end end end elseif (((16408 -(38099 -25741))<=(4209 + 227)) and (v119>=v83[v117 + (315 -(31 + 283))])) then local v304=1240 -(1147 + 93);local v305;while true do if (((492 + 872)==1364) and (v304==(1387 -(882 + 505)))) then v305=0 + 0;while true do if (((1699 -(917 + (2528 -(497 + 1475))))<=(5069 -(28 + 50))) and (v305==(734 -(377 + 357)))) then v67=v85[3];v83[v117 + (1217 -(289 + (1562 -(585 + 52))))]=v119;break;end end break;end end end break;end end break;end if (((4568 -(1032 + 145 + 57))<=(5109 -(851 + 515))) and (v115==(0 + 0 + 0))) then local v227=0 -0;while true do if ((v227==(3 -2)) or ((8720 -5272)<=2475)) then v115=1;break;end if ((v227==(0 -0)) or (679>1895)) then v116=0;v117=nil;v227=1 + 0;end end end if ((v115==(1908 -(828 + 1079))) or ((1973 + 1345)==(3392 + 1465))) then local v228=0 + 0;while true do if ((3239<=(16481 -11839)) and (v228==(0 -0))) then v118=nil;v119=nil;v228=1415 -(1077 + 337);end if ((v228==(2 -1)) or ((201 + 61)>=1438)) then v115=1708 -(836 + 870);break;end end end end break;end end end elseif ((v86<=2) or (3281>(9111 -4708))) then local v120=0 -0;local v121;local v122;while true do if (((9515 -7435)<3801) and (v120==(1 -0))) then while true do if (((0 + 0)==v121) or ((11654 -6701)<(8289 -6530))) then v122=v85[1263 -(1152 + 109)];v83[v122](v83[v122 + 1]);break;end end break;end if (((674 + 421)<((4138 + 526) -(1088 + 357))) and (0==v120)) then v121=(3978 -2339) -(569 + 1057 + 13);v122=nil;v120=1443 -(99 + 1156 + 187);end end elseif ((v86>3) or (3552<(3955 -(319 + 130)))) then v83[v85[1828 -(1735 + 91)]]=v85[1605 -(968 + 634)] + v83[v85[4 + 0]];elseif ((695==(1035 -(183 + (1766 -(1203 + 406))))) and (v83[v85[1388 -(331 + 1055)]]==v83[v85[22 -(14 + 4 + 0)]])) then v67=v67 + (854 -(653 + 200));else v67=v85[3];end elseif ((4788==(6635 -(301 + 1546))) and (v86<=(874 -(721 + 146)))) then if ((v86<=(14 -9)) or ((3167 -(127 + (1430 -663)))>=(15174 -10820))) then if ((v85[2 + 0]==v83[v85[1232 -(498 + 730)]]) or ((3434 + 1336)<(7680 -6139))) then v67=v67 + 1 + 0;else v67=v85[2 + 1];end elseif ((v86==6) or ((3842 -(456 + 243))>=(1273 + 2066))) then v83[v85[(4 -1) -1]]();else v83[v85[3 -1]]=v83[v85[168 -(159 + 6)]];end elseif ((v86<=(36 -28)) or ((4295 + (434 -230))<(5003 -(171 + 970)))) then local v123=0;local v124;local v125;local v126;while true do if (((587 -(484 + 102))==v123) or ((746 + (5534 -(391 + 1349)))<(9014 -5586))) then v126=nil;while true do if (((3545 + 183)==(4541 -(166 + 604 + 43))) and (v124==0)) then v125=0 + 0;v126=nil;v124=1;end if ((v124==(3 -(1 + 1))) or ((4507 -2932)<(277 + 136))) then while true do if ((54<=(3998 -(812 + 84))) and (v125==0)) then v126=v85[2];do return v83[v126](v13(v83,v126 + (3 -2),v85[3 + 0]));end break;end end break;end end break;end if ((v123==(102 -(8 + 94))) or ((4308 -2006)==(978 + 1674))) then v124=0 + 0;v125=nil;v123=1 + (0 -0);end end elseif ((v86==(6 + 3)) or (1620==4333)) then local v160=1552 -(41 + 1511);local v161;local v162;while true do if (((0 + 0)==v160) or ((3202 -(503 + (642 -196)))<(1588 -(320 + 55)))) then v161=0 + 0;v162=nil;v160=424 -(359 + 64);end if ((v160==1) or ((2584 -((1780 -1326) + 257))>=(12814 -8394))) then while true do if (((5196 -(1093 + (2640 -(959 + 1035))))>(266 + 3170)) and (v161==0)) then v162=v85[2 + 0];v83[v162](v13(v83,v162 + ((970 + 381) -(819 + 531)),v85[11 -8]));break;end end break;end end else local v163=0 + 0;local v164;local v165;while true do if ((v163==0) or ((4507 -(415 + 385))>=(5225 -(64 + 341)))) then local v219=(197 + 1432) -(588 + 1041);while true do if ((v219==1) or ((3719 + 236)==(1545 -((882 -569) + 9)))) then v163=1 + (0 -0);break;end if ((v219==(0 -(0 -0))) or ((3482 + 395)==(396 + 1746))) then v164=v85[1666 -(250 + 1414)];v165=v83[v85[8 -5]];v219=3 -2;end end end if (((5490 -(1454 + 290))>=(30 + 91 + 21)) and (v163==((1912 -(1769 + 141)) -1))) then v83[v164 + (2 -1)]=v165;v83[v164]=v165[v85[1 + 0 + 3]];break;end end end elseif ((1628<3995) and (v86<=(1772 -(253 + 1503)))) then if ((v86<=(6 + 7)) or (399<((89 -54) + 31))) then if ((4507>=(5874 -(900 + 480))) and (v86<=(1380 -(499 + 870)))) then v67=v85[1 + 2];elseif ((v86>(821 -(305 + 504))) or (318>=2379)) then v83[v85[1 + 1]][v85[3]]=v83[v85[2 + 2]];else v83[v85[(1338 -339) -(401 + (1946 -1350))]]=v35[v85[(526 -231) -(109 + 183)]];end elseif (((2033 -(303 + 384))<((32126 -11347) -15832)) and (v86<=(971 -(415 + 542)))) then v83[v85[2]]=v83[v85[3]] -v83[v85[4]];elseif ((v86>15) or ((5546 -(618 + 1285))<=(4158 -(1232 + 59)))) then v83[v85[2 -0]]=v83[v85[1 + 2]] + v85[8 -(2 + 2)];else v83[v85[2 + 0 + 0]]=v83[v85[2 + 1]]%v85[4 + (0 -0)];end elseif (((791 + 609)>=836) and (v86<=19)) then if (((458 + 2766)==3224) and (v86<=(16 + 1))) then local v128=(0 -0) + 0;local v129;local v130;local v131;local v132;local v133;while true do if (((2 + 0)==v128) or ((2376 -(49 + 509))>(3102 -920))) then v133=nil;while true do if ((v129==(638 -(236 + 401))) or ((2317 + 386)>=(3865 -(443 + 138)))) then local v229=0;while true do if (((691 + 58 + 172)==(3322 -2401)) and (v229==(293 -(103 + 190)))) then v68=(v132 + v130) -(1 + 0);v133=0;v229=1058 -(670 + 387);end if (((4832 -2300)<(1030 + 2396)) and ((461 -(248 + 212))==v229)) then v129=6 -4;break;end end end if ((v129==(0 + 0)) or ((13278 -(10030 -(290 + 186)))>=(1962 + 2698))) then local v230=0;while true do if ((v230==(1748 -(1041 + 706))) or (((11821 -8649) -1877)==(2528 + 869))) then v129=1;break;end if ((v230==0) or (((4001 -(9 + 553)) + 274)==(11496 -8449))) then v130=v85[1229 -(895 + 332)];v131,v132=v80(v83[v130](v13(v83,v130 + ((241 -140) -(15 + 85)),v68)));v230=1;end end end if (((7697 -3209)>=(8823 -5879)) and (((970 -442) -((87 -36) + 475))==v129)) then for v244=v130,v68 do local v245=0 + 0;local v246;local v247;while true do if ((v245==(643 -(609 + 34))) or ((5436 -(602 + 34))<=(2151 -(892 + 60)))) then v246=1851 -(59 + 1792);v247=nil;v245=1;end if (((4749 -1605)>=188) and (v245==(1 -0))) then while true do if (((11126 -6785)>=(359 -100)) and (v246==0)) then v247=0 + 0;while true do if (((3152 -(1320 + 43))==(670 + 1119)) and (v247==(1400 -(792 + 608)))) then v133=v133 + 1;v83[v244]=v131[v133];break;end end break;end end break;end end end break;end end break;end if ((3586<(2769 + 1440)) and (v128==0)) then v129=0 -(0 + 0);v130=nil;v128=1988 -(824 + 1163);end if ((v128==1) or ((2172 + 171)==4583)) then v131=nil;v132=nil;v128=3 -1;end end elseif ((3472<=((3567 -(349 + 461)) + 2041)) and (v86==(27 -9))) then local v170=0;local v171;local v172;local v173;local v174;while true do if (((6505 -2536)>=(1755 -(762 + 974))) and (v170==2)) then for v231=v171,v68 do local v232=0 + 0;local v233;while true do if (((0 + 0)==v232) or ((9875 -6321)>(3094 + 819))) then v233=0 + 0;while true do if ((v233==(0 + 0)) or ((2711 + 1587)<=542)) then v174=v174 + 1;v83[v231]=v172[v174];break;end end break;end end end break;end if ((((3515 -(10 + 1001)) + 64)==2568) and (v170==(0 + 0))) then local v222=96 -(68 + 28);while true do if (((6004 -(300 + 750))>=(4046 + 544)) and (v222==1)) then v170=1 -0;break;end if (((7331 -2340)>=(2106 + 278)) and (v222==(0 -0))) then v171=v85[(3450 -1997) -(1366 + 85)];v172,v173=v80(v83[v171](v83[v171 + (1030 -(694 + 335))]));v222=3 -2;end end end if (((3033 + (3941 -2581))==4393) and (v170==1)) then v68=(v173 + v171) -1;v174=0 -0;v170=395 -(19 + 17 + 357);end end else local v175=234 -(46 + 188);local v176;while true do if ((v175==(1152 -((1824 -(622 + 385)) + 335))) or ((4383 -(1391 + 22))<=(3214 -(101 + (1181 -514))))) then v176=v85[(1309 -(1212 + 93)) -2];v83[v176]=v83[v176](v13(v83,v176 + (1 -0),v68));break;end end end elseif (((13063 -9648)<(1079 + 2643)) and (v86<=((1 + 34) -(7 + 8)))) then if (((2753 -1221)>152) and (v83[v85[1777 -(104 + 207 + 1464)]]==v85[2 + (3 -1)])) then v67=v67 + 1 + 0;else v67=v85[881 -(605 + 273)];end elseif (((6520 -(1338 + 245))==(10514 -(4451 + 1126))) and (v86>21)) then v83[v85[6 -4]]=v83[v85[5 -2]][v85[4]];else v83[v85[1430 -(1286 + 142)]]=v83[v85[9 -6]]%v83[v85[3 + (19 -(11 + 7))]];end elseif ((v86<=(33 + 0)) or ((131 + 22)>(3536 -950))) then if (((7921 -5947)<=(3459 + 231)) and (v86<=(9 + 18))) then if ((v86<=24) or ((844 + 4155)<(3626 -(854 + 263)))) then if ((v86>(1692 -(159 + 1510))) or ((4688 -(37 + 585 + 206))==(5509 -(266 + 1197)))) then do return;end else local v134=0 -0;local v135;local v136;local v137;local v138;local v139;local v140;while true do if ((v134==(1 + 0)) or ((1544 -(1043 -(53 + 26)))==(9787 -6246))) then local v211=1508 -(131 + 1377);while true do if (((1400 -603)<=(2856 -(1627 + 108))) and (v211==(1537 -(239 + 1298)))) then v137=nil;v138=nil;v211=2 -1;end if ((1553>=(1929 -(1028 + 275))) and (v211==1)) then v134=986 -(135 + 849);break;end end end if ((1328>(1049 -(92 + 14))) and ((536 -(288 + (698 -453)))==v134)) then while true do if ((v135==(0 -0)) or ((2290 -(226 + 5))<(3351 -(874 + 802)))) then local v234=0 + 0 + 0;local v235;while true do if ((v234==0) or ((9725 -(12229 -5790))>(6587 -(800 + 928)))) then v235=1594 -((1346 -(449 + 127)) + 824);while true do if ((v235==0) or (480>=((4903 -(119 + 22)) -1581))) then v136=v85[2 + 0];v137=v85[1 + 3];v235=1 + 0;end if (((319 + 295)<=3274) and (v235==((444 -252) -((576 -413) + 28)))) then v135=(1086 -(8 + 836)) -(203 + 38);break;end end break;end end end if ((((15891 -11297) -(351 + 1244))>(4039 -2150)) and (v135==(1526 -(395 + 1128)))) then if (v140 or ((2879 -(797 + 166))==2104)) then local v255=1877 -(609 + 1268);while true do if ((v255==((2081 -1356) -(613 + (426 -314)))) or ((5460 -(55 + 1835))<=(33 + 2632))) then v83[v138]=v140;v67=v85[3];break;end end else v67=v67 + (3 -2);end break;end if (((4984 -1511)<(5126 -(259 + 1190))) and (v135==(6 -4))) then local v236=0 + (0 -0);while true do if (((7132 -4914)<=(8105 -(13375 -7618))) and (v236==(778 -(474 + 303)))) then v135=4 -1;break;end if (((0 + 0)==v236) or ((2934 -(349 + 146))<=(2741 -(1666 -(23 + 729))))) then local v270=0 + 0;while true do if (((4376 -(354 + 541))==(671 + 2810)) and (v270==(0 + 0))) then for v306=1 + 0,v137 do v83[v138 + v306]=v139[v306];end v140=v139[1];v270=1987 -(1571 + 415);end if (((1726 -1277)<=(5311 -(500 + (366 -243)))) and (v270==(1 + 0))) then v236=216 -(87 + 128);break;end end end end end if (((5526 -(3142 + 1095))<(30 + 2944)) and (v135==(363 -(294 + 68)))) then local v237=0;local v238;while true do if (((0 -0)==v237) or ((10241 -5327)<(14004 -9838))) then v238=0 + 0;while true do if ((v238==((1519 -(502 + 571)) -(289 + 156))) or ((10648 -8434)>(1025 + 2051))) then v135=1253 -(1048 + 203);break;end if ((v238==(0 + 0)) or ((3010 + 1478)==(2812 -(378 + 16)))) then local v297=1590 -(955 + 635);while true do if ((2996>(3396 -(47 + 762))) and (v297==0)) then v138=v136 + 2;v139={v83[v136](v83[v136 + 1 + 0],v83[v138])};v297=1600 -(107 + 974 + 518);end if ((v297==((4 -3) + 0)) or (576>(9016 -5103))) then v238=1 -0;break;end end end end break;end end end end break;end if (((3318 -(1012 + 796))==(1322 + 188)) and (v134==(0 + 0))) then local v212=(0 -0) + 0;while true do if ((v212==(4 -3)) or ((5483 -3533)==(4710 -(1541 + 401)))) then v134=2 -1;break;end if (((2065 -(105 + 228))<=(4470 + 447)) and ((1384 -(252 + 1132))==v212)) then v135=0 + 0;v136=nil;v212=1 -0;end end end if (((207 + 8 + 277)==492) and (v134==(1328 -(1322 + 4)))) then local v213=0;while true do if ((((6938 -3745) -(54 + 78))>=1786) and (v213==(0 + 0))) then v139=nil;v140=nil;v213=2 -1;end if ((v213==1) or (((986 -(42 + 46)) + 127)>(2270 + 49))) then v134=3 + 0;break;end end end end end elseif (((11605 -7506)==(4560 -(368 + 93))) and (v86<=(50 -25))) then local v141=1707 -(1090 + 617);local v142;while true do if ((((609 -311) + 4583)>2714) and (v141==(0 -0))) then v142=v85[2 + 0 + 0];v83[v142](v13(v83,v142 + 1,v68));break;end end elseif ((v86>26) or ((13028 -9144)>4642)) then v83[v85[2]]={};else local v180=0 -0;local v181;local v182;local v183;local v184;while true do if (((361 -272)==(146 -57)) and (v180==(1434 -((306 -193) + 1319)))) then while true do if (((6576 -4263)<(1731 + 1042)) and (v181==(1708 -(1014 + 693)))) then local v256=(8000 -6339) -(1155 + 506);local v257;while true do if (((0 -(0 + 0))==v256) or ((5798 -4417)<=(609 + 510))) then v257=0 + 0;while true do if (((1505 + 2653)>(16762 -13196)) and (v257==0)) then local v309=0 + 0;while true do if ((1919<(814 + 3064)) and (v309==(0 + 0))) then v184={};v183=v10({},{__index=function(v339,v340)local v345=(6376 -4654) -(1053 + 669);local v346;local v347;local v348;while true do if ((v345==(0 -0)) or ((9121 -4957)<1548)) then v346=0;v347=nil;v345=1 -0;end if ((v345==((3 -2) + 0)) or ((1686 -675)<496)) then v348=nil;while true do if (((6190 -3899)<=(4595 -(1027 + 264))) and (v346==(2 -1))) then while true do if ((v347==(0 -0)) or ((6175 -(744 + 792))<(8966 -4479))) then local v369=477 -(332 + 145);local v370;while true do if ((((5876 -(931 + 784)) -2071)<4293) and (v369==(0 + 0))) then v370=466 -(37 + 429);while true do if (((0 + 0)==v370) or (((9829 -6473) -(1237 + 638))>=(1171 + 2608))) then v348=v184[v340];return v348[1][v348[4 -2]];end end break;end end end end break;end if ((v346==(1745 -(1531 + 214))) or (1134>=1466)) then local v363=(0 -0) -0;while true do if ((v363==(19 -((1775 -(934 + 830)) + 8))) or ((236 + 2572)<(2779 -(348 + 1229)))) then v347=(2193 -1013) -(442 + 738);v348=nil;v363=1521 -(766 + 754);end if ((v363==((8 -6) -1)) or (857>(6138 -(4 + 1198)))) then v346=1;break;end end end end break;end end end,__newindex=function(v341,v342,v343)local v349=0 -0;local v350;local v351;while true do if ((((1065 + 5981) -3392)>(1957 -1008)) and (v349==0)) then v350=0 -0;v351=nil;v349=1 + 0;end if ((477<(11048 -7778)) and (v349==((107 + 59) -(48 + 49 + 68)))) then while true do if (((9141 -4775)>(2144 + 1767)) and (v350==(753 -(504 + (786 -(418 + 119)))))) then v351=v184[v342];v351[835 -(697 + 137)][v351[2]]=v343;break;end end break;end end end});v309=1868 -(1471 + 396);end if ((v309==(1 -0)) or (3529>=(9342 -5044))) then v257=1 -0;break;end end end if ((3079==(12857 -9778)) and (v257==(293 -(218 + 74)))) then v181=1 + 1;break;end end break;end end end if ((v181==0) or ((9816 -5315)<(2652 -(412 + 719)))) then local v258=0 + 0;local v259;while true do if (((1402 -815)<(4019 -(1188 + 561))) and (v258==(0 -0))) then v259=0;while true do if ((v259==(0 -0)) or ((3516 -(790 + 853))==(2817 -(377 + 1611)))) then local v310=1101 -(908 + 193);while true do if (((971 + 2296)==(11041 -7774)) and (v310==(554 -(129 + 424)))) then v259=69 -(65 + 3);break;end if ((v310==(0 -0)) or ((15825 -12278)<=2335)) then v182=v78[v85[589 -(101 + 485)]];v183=nil;v310=1;end end end if ((v259==(4 -3)) or ((2796 -((532 -(127 + 44)) + 31))>=(4036 + 182))) then v181=1 + 0;break;end end break;end end end if ((2==v181) or ((7570 -4742)>=4607)) then for v271=1 -(1523 -(101 + 1422)),v85[4 + 0] do local v272=0 -(0 -0);local v273;local v274;while true do if ((v272==0) or (3296<(859 + 20))) then v273=0;v274=nil;v272=202 -(119 + 82);end if (((6233 -3465)>=(2120 -1340)) and (v272==(2 -1))) then while true do if (((4716 -(489 + 645))>=(4097 -(1552 + 154))) and ((0 -(0 -0))==v273)) then v67=v67 + (133 -(112 + 20));v274=v76[v67];v273=1;end if (((4226 -2510)<=((4678 -(1227 + 675)) -((1339 -639) + 21))) and (v273==(1 + 0))) then if ((v274[1 + 0]==(23 -16)) or ((485 + 1328)>=(4540 -((1344 -(417 + 361)) + 834)))) then v184[v271-(1 + 0)]={v83,v274[2 + 1]};else v184[v271-1]={v34,v274[10 -7]};end v82[ #v82 + 1 + 0]=v184;break;end end break;end end end v83[v85[935 -(587 + 86 + 260)]]=v30(v182,v183,v35);break;end end break;end if (((3238 + 1541)==4779) and (v180==(1967 -(70 + 1897)))) then v181=0 + 0;v182=nil;v180=1;end if ((v180==(1 + 0)) or ((2117 -(168 + 513))>(1307 + 3483))) then local v224=0 + 0;while true do if (((4767 -(1530 + 329))==((15427 -(137 + 1152)) -11230)) and (v224==(0 + 0))) then v183=nil;v184=nil;v224=1;end if (((5119 -(401 + 1541))>1907) and (v224==(432 -(404 + 27)))) then v180=2;break;end end end end end elseif ((v86<=(114 -84)) or (3753==3725)) then if (((2131 -(375 + 1309))<(1847 + 32 + 1279)) and (v86<=(3 + 25))) then local v143=0 + 0;local v144;while true do if (((9239 -5041)>=(585 + 433)) and (v143==(1409 -(1283 + 126)))) then v144=v85[8 -6];v83[v144]=v83[v144](v13(v83,v144 + 1,v85[8 -5]));break;end end elseif ((v86>(41 -12)) or ((3153 -(236 + 1634))==(2717 + 1310))) then local v185=0 -0;local v186;local v187;local v188;while true do if (((1768 + 3209)==(5388 -(96 + 315))) and (v185==((932 -(271 + 197)) -(426 + 37)))) then v188=nil;while true do if ((v186==(0 -0)) or ((4217 -(498 + 510 + 123))>=(6294 -(738 + 1018)))) then local v261=0 -(0 -0);while true do if ((2464>=(2132 -(174 + 1230))) and (v261==(1421 -(1195 + 225)))) then v186=1 -0;break;end if ((v261==((1038 + 847) -(1632 + 253))) or ((6000 -((670 -(18 + 32)) + 1023))<3840)) then v187=0;v188=nil;v261=1;end end end if (((2006 -(152 + 858))==(1470 -474)) and (v186==1)) then while true do if ((v187==(814 -(780 + 34))) or ((6188 -(541 + 823))<=(2274 -(660 + 617)))) then v188=v85[(4089 -2736) -(1283 + 68)];v83[v188]=v83[v188]();break;end end break;end end break;end if (((507 -298)<=(752 + 524)) and (v185==(699 -(116 + (1860 -1277))))) then v186=0 + 0;v187=nil;v185=2 -1;end end else v83[v85[2]]=v85[3];end elseif ((v86<=(964 -(300 + 633))) or ((2683 -(78 + (880 -(54 + 216))))>((4316 -(48 + 1626)) + 119))) then if ((v83[v85[1 + 1]]<=v83[v85[4]]) or ((3650 -2433)==(444 + 2158))) then v67=v67 + 1 + 0;else v67=v85[292 -(160 + 129)];end elseif (((4092 -(185 + 916))<=(1808 + (3790 -(739 + 887)))) and (v86==(20 + 12))) then local v190=0 -0;local v191;local v192;while true do if ((v190==(1939 -(484 + 1454))) or ((1081 + 3853)<(4830 -(565 + 347)))) then while true do if (((1215 -(151 + 366))==(1941 -1243)) and (v191==(1739 -(1245 + 494)))) then v192=v85[851 -(532 + 317)];do return v13(v83,v192,v68);end break;end end break;end if ((v190==0) or ((6217 -4004)>(9308 -(12090 -7076)))) then v191=1078 -(809 + 269);v192=nil;v190=1;end end else v83[v85[5 -3]]= #v83[v85[1019 -(802 + 214)]];end elseif ((v86<=39) or (1874<=((2597 -(277 + 1360)) + 493))) then if ((v86<=(915 -(10 + 157 + (2275 -1563)))) or ((4414 + 236)<=(19710 -15589))) then if ((v86<=34) or (((1018 + 377) -(92 + 466))>4393)) then local v145=0 + 0;local v146;local v147;local v148;local v149;local v150;while true do if ((v145==(0 -0)) or (3508<(55 -38))) then v146=0 -0;v147=nil;v145=1 + 0;end if ((v145==1) or ((4667 -(490 + 133))<(1192 -637))) then v148=nil;v149=nil;v145=2;end if (((3 -1)==v145) or ((290 + 980)>(11603 -7465))) then v150=nil;while true do if (((5853 -3281)>=(7202 -5021)) and (v146==2)) then for v248=v147,v68 do local v249=1424 -(214 + 1210);local v250;while true do if ((v249==(374 -(35 + 339))) or (((2280 -(57 + 228)) + 555)<(201 + 2000))) then v250=0;while true do if ((v250==(0 + 0)) or ((2866 + 1055)<(2422 + 643))) then v150=v150 + ((90 -(85 + 4)) -0);v83[v248]=v148[v150];break;end end break;end end end break;end if (((8215 -5174)>=(3672 -735)) and (1==v146)) then v68=(v149 + v147) -1;v150=0 + 0;v146=6 -4;end if ((v146==(290 -(133 + 157))) or (3826<=(2035 -1120))) then local v239=0 + 0;while true do if ((v239==1) or ((1130 + 2508)>=(8506 -4620))) then v146=2 -1;break;end if (((936 -438)==498) and (v239==(0 -0))) then v147=v85[2 + 0];v148,v149=v80(v83[v147](v13(v83,v147 + (4 -3),v85[1642 -(805 + 834)])));v239=1 -0;end end end end break;end end elseif ((v86>(21 + 12 + 2)) or ((598 + 226)>(3388 -(794 + 391 + (377 -(19 + 57)))))) then v83[v85[138 -(76 + 60)]]=v83[v85[8 -5]] -v85[(4 -2) + 2 + 0];else v83[v85[1017 -(951 + 64)]][v85[2 + 1 + 0]]=v85[1681 -(877 + 800)];end elseif (((2174 -1578)<4521) and (v86<=37)) then v83[v85[5 -3]]=v34[v85[6 -3]];elseif (((7547 -4456)<=((11897 -5600) -(18 + 1590))) and (v86>(69 -31))) then local v196=0;local v197;local v198;local v199;while true do if (((6067 -4035)<(902 + 2273)) and (v196==(84 -(60 + 23)))) then v199=nil;while true do if ((903<=(9897 -7688)) and (v197==((225 + 108) -(154 + 178)))) then for v275=1 + 0, #v82 do local v276=0;local v277;local v278;while true do if (((15334 -11111)>=(2523 -1417)) and (v276==1)) then while true do if (((917 + 2084)>=(2463 -(2581 -(1166 + 326)))) and (v277==((0 -0) -0))) then v278=v82[v275];for v325=(421 -(273 + 148)) + 0, #v278 do local v326=0;local v327;local v328;local v329;local v330;local v331;while true do if (((1759 -(313 + 239))>(284 -140)) and (v326==(1 + 0))) then v329=nil;v330=nil;v326=2 -0;end if ((v326==0) or ((3927 -(35 + 9))>=4123)) then v327=0 -0;v328=nil;v326=(1 -0) -0;end if (((2 -0)==v326) or ((578 -309)>=(2581 + 631))) then v331=nil;while true do if (((2482 -(199 + 1652))<4514) and (v327==(1 + 0 + 0))) then local v354=0;while true do if (((1 + 0 + 0)==v354) or (((7349 -5361) + 547)<(827 + 436))) then v327=(569 + 454) -(348 + 673);break;end if ((v354==(1345 -(453 + 892))) or (3441>(2155 + 1552))) then v330=nil;v331=nil;v354=1 + 0;end end end if ((v327==2) or (1569==((7871 + 4931) -9598))) then while true do if (((0 + 0)==v328) or ((434 -212)>=878)) then local v365=314 -(155 + 159);while true do if ((v365==(452 -(77 + 375))) or ((5716 -(466 + 1494))<(4950 -(94 + 1141)))) then local v371=0 -0;while true do if (((3828 -(1182 + 14))>((17563 -13474) -2571)) and (1==v371)) then v365=2 -1;break;end if ((155<2968) and (v371==(1418 -(426 + 992)))) then v329=v278[v325];v330=v329[1 + 0];v371=1 + 0;end end end if (((738 -420)<(1213 + 1883)) and (v365==(1599 -(781 + 817)))) then v328=819 -(519 + 299);break;end end end if ((v328==(1 -0)) or ((10537 -5634)==(3921 -(612 + 610)))) then v331=v329[2 + 0];if (((v330==v83) and (v331>=v198)) or ((6971 -4122)>(4135 + 640))) then local v367=0;local v368;while true do if (((9873 -(8305 -(790 + 1045)))<(11521 -7783)) and (v367==(0 -0))) then v368=731 -(74 + 657);while true do if (((1707 + 1755 + 1431)>(15255 -(5032 + 6345))) and (v368==(0 -0))) then v199[v331]=v330[v331];v329[1]=v199;break;end end break;end end end break;end end break;end if ((v327==(0 -0)) or (537==(8983 -4709))) then local v355=0;while true do if (((490 + 2537)>1341) and (v355==0)) then v328=(0 -0) -(356 -(197 + 159));v329=nil;v355=(1900 -(176 + 1646)) -(28 + 49);end if (((944 -(682 + 261))==v355) or ((1783 -(17 + 88))<(2960 -(3378 -1546)))) then v327=(1791 -(639 + 1150)) -(1 + 0);break;end end end end break;end end end break;end end break;end if ((v276==((778 -(108 + 670)) -0)) or ((1899 -(541 + 349))>=(5371 -4047))) then local v298=0 + 0;while true do if (((15 + 109)<(5104 -(756 + 125))) and (v298==(1 + 0 + 0))) then v276=1 + 0;break;end if (((4758 -826)<=(730 + 3203)) and (v298==(0 -0))) then v277=0 -0;v278=nil;v298=395 -((1046 -(118 + 777)) + 243);end end end end end break;end if ((v197==(20 -(18 + 2))) or ((3897 -(75 + 17 + (1073 -(1012 + 60))))<=(5112 -(1444 + 259)))) then local v262=1414 -(914 + 500);while true do if ((1487>=(130 + 1074)) and (0==v262)) then local v292=(0 -0) + 0;while true do if (((16594 -11900)>=(4806 -(20 + 1702))) and (v292==0)) then v198=v85[1 + 1];v199={};v292=686 -(514 + 171);end if (((3090 -1164)<=(4426 -2332)) and (v292==(2 -1))) then v262=1 + 0;break;end end end if (((601 + (5970 -3443))>=2816) and (v262==((1 -0) + 0))) then v197=1;break;end end end end break;end if ((904<=(4637 -(5004 -1979))) and ((0 + 0)==v196)) then v197=0 + 0;v198=nil;v196=1 + 0;end end else v83[v85[(5 -3) + 0]]=v30(v78[v85[13 -(456 -(214 + 232))]],nil,v35);end elseif (((2200 + (1470 -529))==(4623 -(358 + 1124))) and (v86<=42)) then if ((1513<(8549 -5544)) and (v86<=40)) then local v152=563 -((1265 -823) + 110 + 11);local v153;local v154;local v155;while true do if ((((13391 -8106) -(262 + 206))==(13526 -8709)) and (v152==(1279 -(123 + (1633 -(363 + 115)))))) then v155=nil;while true do if ((186<1925) and (v153==(232 -(154 + 77)))) then while true do if (((455 + 1930)==(1348 + 1037)) and (v154==0)) then v155=v83[v85[(1539 -(786 + 747)) -2]];if ( not v155 or (((7064 -(606 + 1169)) -2944)==(690 -(95 + 351)))) then InstrPoint=InstrPoint + (1655 -(593 + 1061));else local v293=1635 -(210 + 1425);local v294;local v295;while true do if (((1151 + 2944)<((8015 + 351) -4103)) and (v293==(0 -0))) then v294=228 -(17 + (481 -270));v295=nil;v293=(2 -1) + 0;end if ((1==v293) or ((1563 + 1501)<=(3823 -2701))) then while true do if (((0 -0)==v294) or (((16641 -9756) -4907)==(74 + 3460))) then v295=0;while true do if ((v295==(0 + 0)) or ((11851 -7486)==((4325 -(545 + 221)) -2436))) then v83[v85[2]]=v155;InstrPoint=v85[3 + 0];break;end end break;end end break;end end end break;end end break;end if ((967<=(3147 -(1072 + 868))) and (v153==0)) then v154=0 + 0;v155=nil;v153=(1285 -591) -(617 + (898 -(229 + 593)));end end break;end if ((v152==(0 -0)) or ((3774 -(726 + 503))>2954)) then v153=(0 -0) -0;v154=nil;v152=1;end end elseif ((v86==(125 -84)) or (4001>(775 + 3878))) then for v215=v85[1 + 1],v85[12 -(2 + 7)] do v83[v215]=nil;end else local v201=(0 -0) -0;local v202;local v203;local v204;local v205;while true do if ((v201==0) or ((5583 -(212 + 1428))>=(5976 -(969 + 364)))) then v202=1025 -(440 + 585);v203=nil;v201=1;end if (((3862 -1768)==(1920 + 174)) and ((1224 -(184 + 1039))==v201)) then v204=nil;v205=nil;v201=1549 -((3296 -(1296 + 685)) + (609 -(235 + 142)));end if (((644 + 986)==(1027 + 603)) and (v201==(443 -(72 + 369)))) then while true do if (((1591 -((1243 -(530 + 427)) + 1305))==v202) or ((98 + 2698)<=(4596 -(84 + 1795)))) then v203=v85[2 -0];v204=v83[v203];v202=1 + 0;end if ((v202==((2743 -(680 + 836)) -(1043 + 81 + 102))) or (2276<768)) then v205=v83[v203 + 1 + 1];if ((v205>(0 + 0)) or ((3042 -(574 + 934))<=(769 + 65))) then if (((288 + 137)<(14446 -10323)) and (v204>v83[v203 + ((137 -(123 + 12)) -1)])) then v67=v85[3];else v83[v203 + 3 + 0]=v204;end elseif ((v204<v83[v203 + 1 + 0]) or ((644 -455)>(4775 -(180 + 510)))) then v67=v85[234 -(76 + 155)];else v83[v203 + 1 + 2]=v204;end break;end end break;end end end elseif ((v86<=(22 + 4 + 17)) or ((506 -(59 + 51 + 112))>=(1478 + 51))) then v83[v85[2 + 0]]=v85[1033 -(474 + 556)]~=0;elseif ((v86==(316 -((1812 -(999 + 750)) + 209))) or ((4519 -(1132 + 485))<=(436 + 248))) then if ((v83[v85[1463 -(706 + (2068 -1313))]]~=v85[4 + 0]) or ((1722 + 2028)<=867)) then v67=v67 + (77 -(71 + 5));else v67=v85[3];end else local v206=0 -0;local v207;local v208;local v209;local v210;while true do if (((624 -(12 + 37))<(137 + 44 + 680)) and (v206==(2 + 0 + 0))) then while true do if (((441 + 384 + 543)>(420 -198)) and (v207==(2 -1))) then v210=19 -((27 -14) + 6);for v279=v208,v85[17 -(9 + 4)] do local v280=0 -0;local v281;while true do if ((v280==((1725 -(389 + 1336)) + 0)) or (((6045 + 2915) -4152)<=(4592 -(964 + (690 -358))))) then v281=83 -(19 + 61 + 3);while true do if (((1832 -(1609 + 223))==v281) or (2065<=(879 -338))) then v210=v210 + (1179 -(442 + 736));v83[v279]=v209[v210];break;end end break;end end end break;end if (((1886 + 1758)>(506 + 79)) and (v207==(1323 -(895 + 428)))) then local v263=0 + 0;local v264;while true do if ((v263==(170 -(54 + 116))) or ((2404 -(191 + 590 + 380))>(10913 -7672))) then v264=0 + 0;while true do if ((v264==(0 -0)) or (1039<=(722 + 50))) then local v311=1440 -(1312 + 128);while true do if ((v311==((4 -2) -1)) or ((330 + 383)<=396)) then v264=773 -(509 + 263);break;end if (((6228 -(408 + 862))>(986 -(92 + 550))) and (0==v311)) then v208=v85[2];v209={v83[v208](v13(v83,v208 + (1 -0),v68))};v311=2 -1;end end end if (((3 -2)==v264) or ((2277 -(143 + 287 + 255 + 730))>(2752 -(96 + 1392)))) then v207=1;break;end end break;end end end end break;end if ((4050>=1347) and (v206==(622 -(105 + 516)))) then v209=nil;v210=nil;v206=3 -1;end if (((5015 -(21 + 0 + 1481))<=((7350 + 5911) -9158)) and (v206==(0 + 0))) then local v225=0 -0;while true do if ((v225==(536 -(97 + 439))) or ((7113 -2614)<=(4734 -2672))) then v207=0 + 0;v208=nil;v225=1;end if ((v225==(1 + 0)) or ((25 + (1759 -(861 + 664)))>989)) then v206=1 -0;break;end end end end end v67=v67 + (3 -2);break;end end break;end end end end A,B=v28(v11(v71));if  not A[1] then local v87=v33[4][v67] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end if (v18==1) then function v21(v36,v37,v38)if v38 then local v72=(v36/((5 -3)^(v37-(2 -1))))%((2 + 0)^(((v38-1) -(v37-(1 + 0))) + (242 -(85 + 156))));return v72-(v72%((2 + 0) -1));else local v73=(1685 -(144 + 1539))^(v37-(1 + 0));return (((v36%(v73 + v73))>=v73) and (1 -(0 -0))) or (435 -(85 + 350));end end v22=nil;function v22()local v54=v2(v16,v19,v19);v19=v19 + 1;return v54;end v23=nil;v18=2;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v55=0 -0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v55~=(6 -2)) then else while true do if ((1135 -(708 + 426))~=v56) then else local v91=0 -0;local v92;while true do if ((0 + 0)==v91) then v92=0 + 0;while true do if (v92~=0) then else v59=nil;v60=nil;v92=1;end if (v92==(1 + 0)) then v56=4 -2;break;end end break;end end end if (v56==(1 + 2)) then v63=nil;while true do local v98=0;local v99;local v100;while true do if (v98==0) then v99=0;v100=nil;v98=1 + 0;end if (v98~=1) then else while true do if (v99~=0) then else v100=611 -(336 + 275);while true do if ((678 -(251 + 426))~=v100) then else if (v57==(10 -7)) then local v104=0;local v105;local v106;while true do if (v104==(1 -0)) then while true do if (v105==(0 -0)) then v106=0;while true do local v217=0 -0;local v218;while true do if (v217==(0 + 0)) then v218=0;while true do if (v218==0) then if (v106==1) then return v61;end if (v106==0) then local v301=0;while true do if (v301~=(1 + 0)) then else v106=1436 -(1202 + 233);break;end if (v301==(0 -0)) then for v332=1 -0,v24() do v59[v332-1]=v29();end for v334=1,v24() do v60[v334]=v24();end v301=721 -(362 + 358);end end end break;end end break;end end end break;end end break;end if (v104~=0) then else v105=0;v106=nil;v104=1;end end end if ((1773 -(769 + 1002))~=v57) then else local v107=0;local v108;local v109;while true do if (v107~=(0 + 0)) then else v108=0 + 0;v109=nil;v107=1;end if (v107==1) then while true do if ((1169 -(945 + 224))~=v108) then else v109=0;while true do if (v109==0) then local v240=0 + 0;while true do if (v240==0) then for v285=4 -3,v62 do local v286=0;local v287;local v288;local v289;while true do if (1==v286) then v289=nil;while true do if (v287~=0) then else v288=v22();v289=nil;v287=1 + 0;end if (v287==(3 -2)) then if (v288==(1138 -(200 + 937))) then v289=v22()~=0;elseif (v288==2) then v289=v25();elseif (v288==3) then v289=v26();end v63[v285]=v289;break;end end break;end if ((0 + 0)==v286) then v287=0;v288=nil;v286=1;end end end v61[143 -(65 + 75)]=v22();v240=1 + 0;end if (1==v240) then v109=1 + 0;break;end end end if (v109==1) then for v251=1603 -(31 + 1571),v24() do local v252=0;local v253;local v254;while true do if (v252==(2 -1)) then while true do if (v253==(0 + 0)) then v254=v22();if (v21(v254,1 + 0,1 + 0)~=0) then else local v316=1337 -(963 + 374);local v317;local v318;local v319;local v320;local v321;while true do if (v316==(5 -3)) then v321=nil;while true do if (v317~=(0 -0)) then else v318=0;v319=nil;v317=1;end if (v317==1) then local v353=0 -0;while true do if (v353==(928 -(910 + 17))) then v317=2;break;end if (v353==0) then v320=nil;v321=nil;v353=1 + 0;end end end if (v317==2) then while true do if (v318==0) then local v356=0 + 0;local v357;while true do if ((1370 -(1170 + 200))~=v356) then else v357=0 + 0;while true do if (0==v357) then local v372=0 + 0;while true do if (v372==(1 -0)) then v357=1;break;end if (v372==(1271 -(715 + 556))) then local v378=0;while true do if (v378==1) then v372=1;break;end if ((0 -0)==v378) then v319=v21(v254,575 -(378 + 195),3);v320=v21(v254,4,4 + 2);v378=1;end end end end end if (v357==(266 -(93 + 172))) then v318=1;break;end end break;end end end if (v318~=2) then else local v358=0;local v359;while true do if (0==v358) then v359=0;while true do if (v359==(2 -1)) then v318=3;break;end if ((1556 -(132 + 1424))==v359) then local v373=0;while true do if (v373==(1227 -(274 + 953))) then if (v21(v320,1,1 -0)==1) then v321[1268 -(92 + 1174)]=v63[v321[2 + 0]];end if (v21(v320,2,2)==1) then v321[3]=v63[v321[2 + 1]];end v373=2 -1;end if (v373==(1 + 0)) then v359=1 -0;break;end end end end break;end end end if (v318==(5 -2)) then if (v21(v320,1 + 2,1811 -(1708 + 100))~=(2 -1)) then else v321[4]=v63[v321[4 + 0]];end v58[v251]=v321;break;end if (v318==(1866 -(1349 + 516))) then local v361=0;local v362;while true do if (v361~=(0 + 0)) then else v362=0 -0;while true do if (v362==0) then local v374=0 -0;local v375;while true do if (v374~=0) then else v375=1968 -(347 + 1621);while true do if (v375==1) then v362=1;break;end if (v375~=0) then else v321={v23(),v23(),nil,nil};if (v319==(0 + 0)) then local v381=0;local v382;while true do if (v381==0) then v382=0 + 0;while true do if (v382==0) then v321[3]=v23();v321[4]=v23();break;end end break;end end elseif (v319==1) then v321[6 -3]=v24();elseif (v319==2) then v321[3 -0]=v24() -((126 -(25 + 99))^(14 + 2));elseif (v319~=(1318 -(742 + 573))) then else local v387=0 -0;local v388;while true do if (v387~=(0 + 0)) then else v388=951 -(211 + 740);while true do if (0==v388) then v321[3]=v24() -(2^(1952 -(886 + 1050)));v321[4]=v23();break;end end break;end end end v375=3 -2;end end break;end end end if ((3 -2)==v362) then v318=2;break;end end break;end end end end break;end end break;end if (v316==(0 + 0)) then v317=0;v318=nil;v316=1 + 0;end if (v316==1) then v319=nil;v320=nil;v316=1179 -(567 + 610);end end end break;end end break;end if (v252==(0 + 0)) then v253=1334 -(530 + 804);v254=nil;v252=1;end end end v57=104 -(47 + 54);break;end end break;end end break;end end end break;end if (v100==(1992 -(1303 + 689))) then local v102=0;local v103;while true do if (v102==(0 + 0)) then v103=0 + 0;while true do if (v103==(2 -1)) then v100=1;break;end if (v103~=(0 -0)) then else local v157=0 -0;while true do if ((1789 -(1365 + 423))==v157) then v103=1 + 0;break;end if (v157~=(661 -(602 + 59))) then else if (v57~=(1 -0)) then else local v241=0 + 0;local v242;while true do if (v241==0) then v242=0 + 0;while true do if (v242==1) then v63={};v57=2;break;end if ((0 + 0)~=v242) then else local v302=0;while true do if (0~=v302) then else local v322=1815 -(175 + 1640);while true do if (v322~=(822 -(319 + 502))) then else v302=1;break;end if (v322==(1868 -(682 + 1186))) then v61={v58,v59,nil,v60};v62=v24();v322=2 -1;end end end if (v302==(1857 -(1637 + 219))) then v242=4 -3;break;end end end end break;end end end if (v57==0) then local v243=0 -0;while true do if (v243==0) then local v283=0;local v284;while true do if (v283~=(0 + 0)) then else v284=0;while true do if (v284~=0) then else v58={};v59={};v284=2 -1;end if (v284==1) then v243=1;break;end end break;end end end if (v243~=1) then else v60={};v57=1238 -(1204 + 33);break;end end end v157=3 -2;end end end end break;end end end end break;end end break;end end end break;end if (2~=v56) then else local v93=0;local v94;while true do if (v93~=(1512 -(815 + 697))) then else v94=0;while true do if (v94==(464 -(368 + 96))) then local v101=0;while true do if (1==v101) then v94=129 -(57 + 71);break;end if (v101==0) then v61=nil;v62=nil;v101=1653 -(931 + 721);end end end if (v94==(1350 -(580 + 769))) then v56=6 -3;break;end end break;end end end if (v56==(0 -0)) then local v95=0;while true do if (v95==1) then v56=1;break;end if (v95==0) then v57=0 -0;v58=nil;v95=1;end end end end break;end if (v55~=0) then else v56=0 + 0;v57=nil;v55=1;end if (v55==3) then v62=nil;v63=nil;v55=140 -(91 + 45);end if (v55~=2) then else v60=nil;v61=nil;v55=1 + 2;end if ((3 -2)~=v55) then else v58=nil;v59=nil;v55=412 -(223 + 187);end end end v18=5;end end end v0=4;end if (v0==4) then vv9());break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end end end
